{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/pages/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CoinGecko from 'coingecko-api';\nimport { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const CoinGeckoClient = useMemo(() => new CoinGecko(), []);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      // const response: any = await CoinGeckoClient.global()\n      const response = await CoinGeckoClient.coins.all();\n      console.log(response.data);\n    })();\n  }, [CoinGeckoClient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Calc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Main, \"8rEmIKwImARxVWGZ3i3WkA0jxOM=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/pages/Main.tsx"],"names":["React","CoinGecko","useEffect","useMemo","Main","CoinGeckoClient","response","coins","all","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,eAAe,GAAGF,OAAO,CAAC,MAAiB,IAAIF,SAAJ,EAAlB,EAAmC,EAAnC,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAY;AACpB;;AAAC,KAAC,YAA2B;AAC3B;AACA,YAAMI,QAAQ,GAAG,MAAMD,eAAe,CAACE,KAAhB,CAAsBC,GAAtB,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB;AACD,KAJA;AAKF,GANQ,EAMN,CAACN,eAAD,CANM,CAAT;AAQA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZM;;GAAMD,I;;KAAAA,I","sourcesContent":["import React from 'react'\nimport CoinGecko from 'coingecko-api'\nimport { useEffect } from 'react'\nimport { useMemo } from 'react'\n\nexport const Main: React.FC = () => {\n  const CoinGeckoClient = useMemo((): CoinGecko => new CoinGecko(), [])\n\n  useEffect((): void => {\n    ;(async (): Promise<void> => {\n      // const response: any = await CoinGeckoClient.global()\n      const response = await CoinGeckoClient.coins.all()\n      console.log(response.data)\n    })()\n  }, [CoinGeckoClient])\n\n  return <div>Calc</div>\n}\n"]},"metadata":{},"sourceType":"module"}