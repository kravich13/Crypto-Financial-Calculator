{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/pages/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CoinGecko from 'coingecko-api';\nimport { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { MultipleSearch } from '../components/search forms/MultipleSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const CoinGeckoClient = useMemo(() => new CoinGecko(), []);\n  useEffect(() => {\n    ;\n\n    (async () => {// const dsds = await CoinGeckoClient.coins.fetchMarketChart('bitcoin', { days: 28 })\n      // console.log(dsds.data)\n      // const data = await CoinGeckoClient.coins.fetchMarketChartRange(['bitcoin', 'litecoin'], {\n      //   from: 1514764800,\n      //   to: 1631720497456,\n      // })\n      // console.log(await CoinGeckoClient.coins.list())\n      // const arrPrices: [] = data.prices\n      // const monthlyPrices: number[] = []\n      // let numberOfCoins: number = 0\n      // arrPrices.forEach((elem: number[]) => {\n      //   const [timestamp, price] = elem\n      //   const day: number = Number(new Date(timestamp).toLocaleString('en', { day: 'numeric' }))\n      //   if (day === 28) monthlyPrices.push(Number(price.toFixed(0)))\n      // })\n      // monthlyPrices.forEach((elem: number): number => (numberOfCoins += 100 / elem))\n      // const investedFunds: number = monthlyPrices.length * 100\n      // console.log(numberOfCoins)\n      // console.log(investedFunds)\n    })();\n  }, [CoinGeckoClient]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(MultipleSearch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"8rEmIKwImARxVWGZ3i3WkA0jxOM=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/pages/Main.tsx"],"names":["React","CoinGecko","useEffect","useMemo","MultipleSearch","Main","CoinGeckoClient"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,cAAT,QAA+B,2CAA/B;;AAEA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,eAAe,GAAGH,OAAO,CAAC,MAAW,IAAIF,SAAJ,EAAZ,EAA6B,EAA7B,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAY;AACpB;;AAAC,KAAC,YAA2B,CAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KApBA;AAqBF,GAtBQ,EAsBN,CAACI,eAAD,CAtBM,CAAT;AAwBA,sBACE;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCM;;GAAMD,I;;KAAAA,I","sourcesContent":["import React from 'react'\nimport CoinGecko from 'coingecko-api'\nimport { useEffect } from 'react'\nimport { useMemo } from 'react'\nimport { MultipleSearch } from '../components/search forms/MultipleSearch'\n\nexport const Main: React.FC = () => {\n  const CoinGeckoClient = useMemo((): any => new CoinGecko(), [])\n\n  useEffect((): void => {\n    ;(async (): Promise<void> => {\n      // const dsds = await CoinGeckoClient.coins.fetchMarketChart('bitcoin', { days: 28 })\n      // console.log(dsds.data)\n      // const data = await CoinGeckoClient.coins.fetchMarketChartRange(['bitcoin', 'litecoin'], {\n      //   from: 1514764800,\n      //   to: 1631720497456,\n      // })\n      // console.log(await CoinGeckoClient.coins.list())\n      // const arrPrices: [] = data.prices\n      // const monthlyPrices: number[] = []\n      // let numberOfCoins: number = 0\n      // arrPrices.forEach((elem: number[]) => {\n      //   const [timestamp, price] = elem\n      //   const day: number = Number(new Date(timestamp).toLocaleString('en', { day: 'numeric' }))\n      //   if (day === 28) monthlyPrices.push(Number(price.toFixed(0)))\n      // })\n      // monthlyPrices.forEach((elem: number): number => (numberOfCoins += 100 / elem))\n      // const investedFunds: number = monthlyPrices.length * 100\n      // console.log(numberOfCoins)\n      // console.log(investedFunds)\n    })()\n  }, [CoinGeckoClient])\n\n  return (\n    <section>\n      <MultipleSearch />\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}