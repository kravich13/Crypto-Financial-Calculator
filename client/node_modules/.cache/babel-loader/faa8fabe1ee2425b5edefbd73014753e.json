{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/App.tsx\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Title } from './components/navbar/Title';\nimport { Main } from './pages/Main';\nimport { Unfaithful } from './pages/Unfaithful ';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          component: Main,\n          path: \"/\",\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: Unfaithful\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}; // const coinsForTwoYears = {\n//   ETH: [162, 271, 300, 205, 175, 171, 185, 152, 128, 173, 221, 128, 195, 214, 225, 320, 390, 356, 395, 523,\n//       700, 1287, 1381, 1600\n//   ],\n//   LTC: [72, 113.5, 117.2, 87, 68.6, 54.5, 58.8, 47, 2, 42, 59.3, 60.7, 38.5, 44.6, 41.3, 54.5, 56.7, 46,\n//       56.6, 71.3, 130.5, 127, 165, 175\n//   ],\n//   ETC: [5.74, 8.2, 7.82, 5.75, 6.75, 4.65, 4.87, 3.95, 4.5, 10.9, 7.54, 4.85, 6.13, 6.82, 5.72, 7.2, 6.64,\n//       5.76, 5.53, 6.24, 5.92, 7.4, 10.57, 11.3\n//   ],\n//   NEO: [9.8, 12.44, 17.6, 11.06, 9.3, 7.28, 11.66, 9.4, 8.8, 11.4, 11.1, 6.43, 8.47, 10.17, 9.81, 11.62,\n//       17.86, 20.7, 16.33, 17, 15.4, 21.7, 35.2, 39.71\n//   ],\n//   EOS: [4.86, 7.94, 6, 4.08, 3.36, 2.79, 3.36, 2.65, 2.61, 4, 3.52, 2.18, 2.72, 2.58, 2.34, 2.77, 3.03, 2.58,\n//       2.65, 2.92, 2.77, 2.61, 3.53, 4.04\n//   ],\n//   TRX: [0.0241, 0.0342, 0.0327, 0.0221, 0.0165, 0.0135, 0.0205, 0.016, 0.0135, 0.0178, 0.0167, 0.011, 0.0149,\n//       0.0149, 0.0155, 0.0188, 0.0233, 0.0264, 0.0268, 0.0298, 0.0291, 0.0288, 0.0453, 0.0632\n//   ],\n//   DASH: [113, 168, 162, 107, 87, 71, 74, 53, 41, 115, 88, 65, 82, 74.2, 67.5, 78.5, 84, 68.4, 69, 100.5,\n//       107.5, 100, 198.5, 200.5\n//   ],\n//   XMR: [97, 98, 80.2, 75.2, 57.5, 60, 55.3, 46, 66.8, 68.8, 46.6, 62.2, 65.5, 62.7, 80.3, 92.1, 96, 129.8,\n//       120.2, 161.2, 131.7, 212, 224, 225\n//   ],\n//   OMG: [1.59, 2.22, 2.51, 1.5, 1.12, 0.81, 1, 0.77, 0.625, 0.812, 0.866, 0.496, 0.653, 1.62, 1.39, 1.58, 5.22,\n//       3.45, 3.11, 3.72, 2.65, 3.25, 4.28, 5.26\n//   ],\n//   IOTA: [0.272, 0.453, 0.4, 0.278, 0.25, 0.261, 0.281, 0.211, 0.162, 0.27, 0.214, 0.135, 0.173, 0.2, 0.206,\n//       0.273, 0.342, 0.27, 0.27, 0.324, 0.302, 0.404, 1.1, 1.41\n//   ],\n//   // ZEC: [63, 81.8, 108.9, 67.7, 47.8, 38.7, 39.2, 28.9, 28, 56, 51.5, 30.2, 44, 46.8, 52.7, 70.8, 73.8, 57,\n//   //     58.2, 72.6, 68.4, 82.9, 114, 129.5\n//   // ]\n//   // BNB: [22.2, 33.2, 33.9, 27.6, 24.4, 15.7, 19.7, 15.8, 13.4, 17.8, 18.7, 12.1, 16.3, 16.7, 15.3, 20, 23, 26.7, 30.8, 20.9, 34.7, 41.6, 214, 267],\n//   // XLM: [0.102, 0.138, 0.109, 0.0838, 0.0657, 0.0583, 0.066, 0.0583, 0.0462, 0.06, 0.0589, 0.04, 0.068, 0.0675, 0.0633, 0.0959, 0.0974, 0.0742, 0.0792, 0.203, 0.145, 0.268, 0.415, 0.388],\n//   // ADA: [0.0816, 0.09, 0.0872, 0.0589, 0.0473, 0.0384, 0.0431, 0.0389, 0.0334, 0.0503, 0.0487, 0.029, 0.0488, 0.0596, 0.0785, 0.0142, 0.0108, 0.0101, 0.099, 0.151, 0.163, 0.329, 1.22, 1.18],\n//   // MKR: [542, 754, 678, 575, 497, 444, 515, 560, 438, 505, 576, 296, 332, 346, 442, 511, 622, 523, 530, 534, 586, 1400, 1972, 2080]\n// }\n// const lastPrice = {\n//   ETH: 4300,\n//   LTC: 387,\n//   ETC: 111,\n//   NEO: 115,\n//   EOS: 14.5,\n//   IOTA: 2.15,\n//   TRX: 0.144,\n//   DASH: 426,\n//   XMR: 463,\n//   OMG: 12,\n//   // BNB: 306,\n//   // XLM: 0.408,\n//   // ADA: 1.18,\n//   // MKR: 2304\n//   // ZEC: 135.55\n// }\n// averagePriceMonth(coinsForTwoYears, lastPrice, 180)\n// function averagePriceMonth(coinArrayObject, arrLastPrice, investMonth) {\n//   const coinPrices = Object.values(coinArrayObject)\n//   const moneyForOneCoin = +(investMonth / coinPrices.length).toFixed(1)\n//   let totalIncrease = 0\n//   const totalInvested = investMonth * 24\n//   const amountOfCoins = {}\n//   const coins = Object.keys(coinArrayObject)\n//   for (const coin in coinArrayObject) {\n//       let numberOfCoins = 0\n//       coinArrayObject[coin].forEach(price => {\n//           numberOfCoins += moneyForOneCoin / price\n//       })\n//       amountOfCoins[coin] = {\n//           numberOfCoins: +numberOfCoins.toFixed(3),\n//           amountInDollars: +(numberOfCoins * arrLastPrice[coin]).toFixed()\n//       }\n//   }\n//   for (const coin in amountOfCoins) {\n//       totalIncrease += amountOfCoins[coin].amountInDollars\n//       for (const count in amountOfCoins[coin]) {\n//           if (count === `numberOfCoins`) {\n//               console.log(`����� ����� ${coin}: ${amountOfCoins[coin][count]}`)\n//           }\n//       }\n//   }\n//   const howManyX = totalIncrease / totalInvested\n//   const profitPercentage = (howManyX > 1 ? (howManyX - 1) * 100 : (1 - howManyX) * 100)\n//   const commonData =\n//       `����� ���� ������� �� 24 ������: $${totalInvested} \\n ������ �������: $${totalIncrease - totalInvested}\n//       ����� ����� � �������: $${totalIncrease} \\n ����� � ���������: ${profitPercentage.toFixed(1)}%`\n//   console.log(commonData)\n// }\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/App.tsx"],"names":["React","BrowserRouter","Route","Switch","Title","Main","Unfaithful","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAO,WAAP;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,OAAO,MAAMC,GAAa,GAAG,MAAM;AACjC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEF,IAAlB;AAAwB,UAAA,IAAI,EAAC,GAA7B;AAAiC,UAAA,KAAK;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbM,C,CAeP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;KApHaC,G","sourcesContent":["import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport { Title } from './components/navbar/Title'\nimport { Main } from './pages/Main'\nimport { Unfaithful } from './pages/Unfaithful '\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Title />\n\n        <Switch>\n          <Route component={Main} path=\"/\" exact></Route>\n          <Route component={Unfaithful} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\n// const coinsForTwoYears = {\n//   ETH: [162, 271, 300, 205, 175, 171, 185, 152, 128, 173, 221, 128, 195, 214, 225, 320, 390, 356, 395, 523,\n//       700, 1287, 1381, 1600\n//   ],\n//   LTC: [72, 113.5, 117.2, 87, 68.6, 54.5, 58.8, 47, 2, 42, 59.3, 60.7, 38.5, 44.6, 41.3, 54.5, 56.7, 46,\n//       56.6, 71.3, 130.5, 127, 165, 175\n//   ],\n//   ETC: [5.74, 8.2, 7.82, 5.75, 6.75, 4.65, 4.87, 3.95, 4.5, 10.9, 7.54, 4.85, 6.13, 6.82, 5.72, 7.2, 6.64,\n//       5.76, 5.53, 6.24, 5.92, 7.4, 10.57, 11.3\n//   ],\n//   NEO: [9.8, 12.44, 17.6, 11.06, 9.3, 7.28, 11.66, 9.4, 8.8, 11.4, 11.1, 6.43, 8.47, 10.17, 9.81, 11.62,\n//       17.86, 20.7, 16.33, 17, 15.4, 21.7, 35.2, 39.71\n//   ],\n//   EOS: [4.86, 7.94, 6, 4.08, 3.36, 2.79, 3.36, 2.65, 2.61, 4, 3.52, 2.18, 2.72, 2.58, 2.34, 2.77, 3.03, 2.58,\n//       2.65, 2.92, 2.77, 2.61, 3.53, 4.04\n//   ],\n//   TRX: [0.0241, 0.0342, 0.0327, 0.0221, 0.0165, 0.0135, 0.0205, 0.016, 0.0135, 0.0178, 0.0167, 0.011, 0.0149,\n//       0.0149, 0.0155, 0.0188, 0.0233, 0.0264, 0.0268, 0.0298, 0.0291, 0.0288, 0.0453, 0.0632\n//   ],\n//   DASH: [113, 168, 162, 107, 87, 71, 74, 53, 41, 115, 88, 65, 82, 74.2, 67.5, 78.5, 84, 68.4, 69, 100.5,\n//       107.5, 100, 198.5, 200.5\n//   ],\n//   XMR: [97, 98, 80.2, 75.2, 57.5, 60, 55.3, 46, 66.8, 68.8, 46.6, 62.2, 65.5, 62.7, 80.3, 92.1, 96, 129.8,\n//       120.2, 161.2, 131.7, 212, 224, 225\n//   ],\n//   OMG: [1.59, 2.22, 2.51, 1.5, 1.12, 0.81, 1, 0.77, 0.625, 0.812, 0.866, 0.496, 0.653, 1.62, 1.39, 1.58, 5.22,\n//       3.45, 3.11, 3.72, 2.65, 3.25, 4.28, 5.26\n//   ],\n//   IOTA: [0.272, 0.453, 0.4, 0.278, 0.25, 0.261, 0.281, 0.211, 0.162, 0.27, 0.214, 0.135, 0.173, 0.2, 0.206,\n//       0.273, 0.342, 0.27, 0.27, 0.324, 0.302, 0.404, 1.1, 1.41\n//   ],\n//   // ZEC: [63, 81.8, 108.9, 67.7, 47.8, 38.7, 39.2, 28.9, 28, 56, 51.5, 30.2, 44, 46.8, 52.7, 70.8, 73.8, 57,\n//   //     58.2, 72.6, 68.4, 82.9, 114, 129.5\n//   // ]\n//   // BNB: [22.2, 33.2, 33.9, 27.6, 24.4, 15.7, 19.7, 15.8, 13.4, 17.8, 18.7, 12.1, 16.3, 16.7, 15.3, 20, 23, 26.7, 30.8, 20.9, 34.7, 41.6, 214, 267],\n//   // XLM: [0.102, 0.138, 0.109, 0.0838, 0.0657, 0.0583, 0.066, 0.0583, 0.0462, 0.06, 0.0589, 0.04, 0.068, 0.0675, 0.0633, 0.0959, 0.0974, 0.0742, 0.0792, 0.203, 0.145, 0.268, 0.415, 0.388],\n//   // ADA: [0.0816, 0.09, 0.0872, 0.0589, 0.0473, 0.0384, 0.0431, 0.0389, 0.0334, 0.0503, 0.0487, 0.029, 0.0488, 0.0596, 0.0785, 0.0142, 0.0108, 0.0101, 0.099, 0.151, 0.163, 0.329, 1.22, 1.18],\n//   // MKR: [542, 754, 678, 575, 497, 444, 515, 560, 438, 505, 576, 296, 332, 346, 442, 511, 622, 523, 530, 534, 586, 1400, 1972, 2080]\n// }\n\n// const lastPrice = {\n//   ETH: 4300,\n//   LTC: 387,\n//   ETC: 111,\n//   NEO: 115,\n//   EOS: 14.5,\n//   IOTA: 2.15,\n//   TRX: 0.144,\n//   DASH: 426,\n//   XMR: 463,\n//   OMG: 12,\n//   // BNB: 306,\n//   // XLM: 0.408,\n//   // ADA: 1.18,\n//   // MKR: 2304\n//   // ZEC: 135.55\n// }\n\n// averagePriceMonth(coinsForTwoYears, lastPrice, 180)\n\n// function averagePriceMonth(coinArrayObject, arrLastPrice, investMonth) {\n\n//   const coinPrices = Object.values(coinArrayObject)\n//   const moneyForOneCoin = +(investMonth / coinPrices.length).toFixed(1)\n\n//   let totalIncrease = 0\n//   const totalInvested = investMonth * 24\n//   const amountOfCoins = {}\n//   const coins = Object.keys(coinArrayObject)\n\n//   for (const coin in coinArrayObject) {\n//       let numberOfCoins = 0\n\n//       coinArrayObject[coin].forEach(price => {\n//           numberOfCoins += moneyForOneCoin / price\n//       })\n\n//       amountOfCoins[coin] = {\n//           numberOfCoins: +numberOfCoins.toFixed(3),\n//           amountInDollars: +(numberOfCoins * arrLastPrice[coin]).toFixed()\n//       }\n//   }\n\n//   for (const coin in amountOfCoins) {\n//       totalIncrease += amountOfCoins[coin].amountInDollars\n\n//       for (const count in amountOfCoins[coin]) {\n//           if (count === `numberOfCoins`) {\n//               console.log(`����� ����� ${coin}: ${amountOfCoins[coin][count]}`)\n//           }\n//       }\n//   }\n\n//   const howManyX = totalIncrease / totalInvested\n//   const profitPercentage = (howManyX > 1 ? (howManyX - 1) * 100 : (1 - howManyX) * 100)\n\n//   const commonData =\n//       `����� ���� ������� �� 24 ������: $${totalInvested} \\n ������ �������: $${totalIncrease - totalInvested}\n//       ����� ����� � �������: $${totalIncrease} \\n ����� � ���������: ${profitPercentage.toFixed(1)}%`\n\n//   console.log(commonData)\n// }\n"]},"metadata":{},"sourceType":"module"}