{"ast":null,"code":"var _jsxFileName = \"/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/pages/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CoinGecko from 'coingecko-api';\nimport { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n\n  const CoinGeckoClient = useMemo(() => new CoinGecko(), []);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      // const dsds = await CoinGeckoClient.coins.fetchMarketChart('bitcoin', { days: 28 })\n      // console.log(dsds.data)\n      const {\n        data\n      } = await CoinGeckoClient.coins.fetchMarketChartRange('bitcoin', {\n        from: 1483228800,\n        to: 1631720497456\n      });\n      const arrPrices = data.prices;\n      const arrNeedPrices = [];\n      arrPrices.forEach(elem => {\n        const [timestamp, price] = elem;\n        const day = +new Date(timestamp).toLocaleString('en', {\n          day: 'numeric'\n        });\n        if (day === 28) arrNeedPrices.push(+price.toFixed(1));\n      });\n      let sumOfAllPrices = 0;\n      arrNeedPrices.forEach(elem => sumOfAllPrices += elem);\n      const averagePrice = sumOfAllPrices / arrNeedPrices.length;\n      console.log(arrNeedPrices); // const [timestamp, price] = data.prices[0]\n      // const date: string = new Date(timestamp).toLocaleDateString()\n      // console.log(`Date: ${date}, price: ${price}`)\n    })();\n  }, [CoinGeckoClient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Calc\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Main, \"8rEmIKwImARxVWGZ3i3WkA0jxOM=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/src/pages/Main.tsx"],"names":["React","CoinGecko","useEffect","useMemo","Main","CoinGeckoClient","data","coins","fetchMarketChartRange","from","to","arrPrices","prices","arrNeedPrices","forEach","elem","timestamp","price","day","Date","toLocaleString","push","toFixed","sumOfAllPrices","averagePrice","length","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,eAAe,GAAGF,OAAO,CAAC,MAAW,IAAIF,SAAJ,EAAZ,EAA6B,EAA7B,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAY;AACpB;;AAAC,KAAC,YAA2B;AAC3B;AACA;AAEA,YAAM;AAAEI,QAAAA;AAAF,UAAW,MAAMD,eAAe,CAACE,KAAhB,CAAsBC,qBAAtB,CAA4C,SAA5C,EAAuD;AAC5EC,QAAAA,IAAI,EAAE,UADsE;AAE5EC,QAAAA,EAAE,EAAE;AAFwE,OAAvD,CAAvB;AAKA,YAAMC,SAAa,GAAGL,IAAI,CAACM,MAA3B;AACA,YAAMC,aAAuB,GAAG,EAAhC;AAEAF,MAAAA,SAAS,CAACG,OAAV,CAAmBC,IAAD,IAAoB;AACpC,cAAM,CAACC,SAAD,EAAYC,KAAZ,IAAqBF,IAA3B;AACA,cAAMG,GAAW,GAAG,CAAC,IAAIC,IAAJ,CAASH,SAAT,EAAoBI,cAApB,CAAmC,IAAnC,EAAyC;AAAEF,UAAAA,GAAG,EAAE;AAAP,SAAzC,CAArB;AAEA,YAAIA,GAAG,KAAK,EAAZ,EAAgBL,aAAa,CAACQ,IAAd,CAAmB,CAACJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAApB;AACjB,OALD;AAOA,UAAIC,cAAsB,GAAG,CAA7B;AAEAV,MAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAD,IAAmBQ,cAAc,IAAIR,IAA3D;AAEA,YAAMS,YAAoB,GAAGD,cAAc,GAAGV,aAAa,CAACY,MAA5D;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ,EAxB2B,CA0B3B;AACA;AAEA;AACD,KA9BA;AA+BF,GAhCQ,EAgCN,CAACR,eAAD,CAhCM,CAAT;AAkCA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtCM;;GAAMD,I;;KAAAA,I","sourcesContent":["import React from 'react'\nimport CoinGecko from 'coingecko-api'\nimport { useEffect } from 'react'\nimport { useMemo } from 'react'\n\nexport const Main: React.FC = () => {\n  const CoinGeckoClient = useMemo((): any => new CoinGecko(), [])\n\n  useEffect((): void => {\n    ;(async (): Promise<void> => {\n      // const dsds = await CoinGeckoClient.coins.fetchMarketChart('bitcoin', { days: 28 })\n      // console.log(dsds.data)\n\n      const { data } = await CoinGeckoClient.coins.fetchMarketChartRange('bitcoin', {\n        from: 1483228800,\n        to: 1631720497456,\n      })\n\n      const arrPrices: [] = data.prices\n      const arrNeedPrices: number[] = []\n\n      arrPrices.forEach((elem: number[]) => {\n        const [timestamp, price] = elem\n        const day: number = +new Date(timestamp).toLocaleString('en', { day: 'numeric' })\n\n        if (day === 28) arrNeedPrices.push(+price.toFixed(1))\n      })\n\n      let sumOfAllPrices: number = 0\n\n      arrNeedPrices.forEach((elem: number) => (sumOfAllPrices += elem))\n\n      const averagePrice: number = sumOfAllPrices / arrNeedPrices.length\n      console.log(arrNeedPrices)\n\n      // const [timestamp, price] = data.prices[0]\n      // const date: string = new Date(timestamp).toLocaleDateString()\n\n      // console.log(`Date: ${date}, price: ${price}`)\n    })()\n  }, [CoinGeckoClient])\n\n  return <div>Calc</div>\n}\n"]},"metadata":{},"sourceType":"module"}