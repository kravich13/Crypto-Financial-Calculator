{"ast":null,"code":"/**\n * @description Internal helper to check if parameter is a string\n * @function isString\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = str => {\n  return typeof str === 'string' || str instanceof String;\n};\n/**\n * @description Internal helper to check if string is empty\n * @function isStringEmpty\n * @param {*} str\n * @returns {boolean}\n */\n\n\nconst isStringEmpty = str => {\n  if (!isString(str)) return false;\n  return str.length == 0;\n};\n/**\n * @description Internal helper to check if parameter is a date\n * @function isDate\n * @param {*} date\n * @returns {boolean}\n */\n\n\nconst isDate = date => {\n  if (isString(date) || isArray(date) || date == undefined || date == null) return false;\n  return date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\n};\n/**\n * @description Internal helper to check if parameter is an object\n * @function isObject\n * @param {*} obj\n * @returns {boolean}\n */\n\n\nconst isObject = obj => {\n  if (isArray(obj) || isDate(obj)) return false;\n  return obj !== null && typeof obj === 'object';\n};\n/**\n * @description Internal helper to check if parameter is a number\n * @function isNumber\n * @param {*} num\n * @returns {boolean}\n */\n\n\nconst isNumber = num => {\n  return !isNaN(num) && !isNaN(parseInt(num));\n};\n/**\n * @description Internal helper to check if parameter is an array\n * @function isArray\n * @param {*} arr\n * @returns {boolean}\n */\n\n\nconst isArray = arr => {\n  return Array.isArray(arr);\n};\n/**\n * @description Internal helper to emit a warning to the console\n * @function _WARN_\n * @param {string} title\n * @param {string} detail\n * @returns {boolean}\n */\n\n\nconst _WARN_ = (title = '', detail = '') => {\n  process.emitWarning(title, {\n    detail,\n    code: 'CoinGecko'\n  });\n  return true;\n}; //\n\n\nmodule.exports = {\n  isString,\n  isStringEmpty,\n  isDate,\n  isObject,\n  isNumber,\n  isArray,\n  _WARN_\n};","map":{"version":3,"sources":["/home/vladislav/Dev/node-js/My-projects/crypto-financial-calculator/node_modules/coingecko-api/lib/helpers/utilities.js"],"names":["isString","str","String","isStringEmpty","length","isDate","date","isArray","undefined","Object","prototype","toString","call","isNaN","isObject","obj","isNumber","num","parseInt","arr","Array","_WARN_","title","detail","process","emitWarning","code","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAIC,GAAD,IAAS;AACxB,SAAQ,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYC,MAAlD;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAa,GAAIF,GAAD,IAAS;AAC7B,MAAI,CAACD,QAAQ,CAACC,GAAD,CAAb,EAAoB,OAAO,KAAP;AACpB,SAAQA,GAAG,CAACG,MAAJ,IAAc,CAAtB;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,MAAM,GAAIC,IAAD,IAAU;AACvB,MAAIN,QAAQ,CAACM,IAAD,CAAR,IAAkBC,OAAO,CAACD,IAAD,CAAzB,IAAmCA,IAAI,IAAIE,SAA3C,IAAwDF,IAAI,IAAI,IAApE,EAA0E,OAAO,KAAP;AAC1E,SAAQA,IAAI,IAAIG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,IAA/B,MAAyC,eAAjD,IAAoE,CAACO,KAAK,CAACP,IAAD,CAAlF;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,QAAQ,GAAIC,GAAD,IAAS;AACxB,MAAIR,OAAO,CAACQ,GAAD,CAAP,IAAgBV,MAAM,CAACU,GAAD,CAA1B,EAAiC,OAAO,KAAP;AACjC,SAAQA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAvC;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACxB,SAAQ,CAACJ,KAAK,CAACI,GAAD,CAAN,IAAe,CAACJ,KAAK,CAACK,QAAQ,CAACD,GAAD,CAAT,CAA7B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMV,OAAO,GAAIY,GAAD,IAAS;AACvB,SAAOC,KAAK,CAACb,OAAN,CAAcY,GAAd,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,MAAM,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAM,GAAG,EAAtB,KAA6B;AAC1CC,EAAAA,OAAO,CAACC,WAAR,CAAoBH,KAApB,EAA2B;AACzBC,IAAAA,MADyB;AAEzBG,IAAAA,IAAI,EAAE;AAFmB,GAA3B;AAKA,SAAO,IAAP;AACD,CAPD,C,CASA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf5B,EAAAA,QADe;AAEfG,EAAAA,aAFe;AAGfE,EAAAA,MAHe;AAIfS,EAAAA,QAJe;AAKfE,EAAAA,QALe;AAMfT,EAAAA,OANe;AAOfc,EAAAA;AAPe,CAAjB","sourcesContent":["/**\n * @description Internal helper to check if parameter is a string\n * @function isString\n * @param {*} str\n * @returns {boolean}\n */\nconst isString = (str) => {\n  return (typeof str === 'string' || str instanceof String);\n};\n\n/**\n * @description Internal helper to check if string is empty\n * @function isStringEmpty\n * @param {*} str\n * @returns {boolean}\n */\nconst isStringEmpty = (str) => {\n  if (!isString(str)) return false;\n  return (str.length == 0);\n};\n\n/**\n * @description Internal helper to check if parameter is a date\n * @function isDate\n * @param {*} date\n * @returns {boolean}\n */\nconst isDate = (date) => {\n  if (isString(date) || isArray(date) || date == undefined || date == null) return false;\n  return (date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date));\n};\n\n/**\n * @description Internal helper to check if parameter is an object\n * @function isObject\n * @param {*} obj\n * @returns {boolean}\n */\nconst isObject = (obj) => {\n  if (isArray(obj) || isDate(obj)) return false;\n  return (obj !== null && typeof obj === 'object');\n};\n\n/**\n * @description Internal helper to check if parameter is a number\n * @function isNumber\n * @param {*} num\n * @returns {boolean}\n */\nconst isNumber = (num) => {\n  return (!isNaN(num) && !isNaN(parseInt(num)));\n};\n\n/**\n * @description Internal helper to check if parameter is an array\n * @function isArray\n * @param {*} arr\n * @returns {boolean}\n */\nconst isArray = (arr) => {\n  return Array.isArray(arr);\n};\n\n/**\n * @description Internal helper to emit a warning to the console\n * @function _WARN_\n * @param {string} title\n * @param {string} detail\n * @returns {boolean}\n */\nconst _WARN_ = (title = '', detail = '') => {\n  process.emitWarning(title, {\n    detail,\n    code: 'CoinGecko',\n  });\n\n  return true;\n};\n\n//\n\nmodule.exports = {\n  isString,\n  isStringEmpty,\n  isDate,\n  isObject,\n  isNumber,\n  isArray,\n  _WARN_,\n};"]},"metadata":{},"sourceType":"script"}